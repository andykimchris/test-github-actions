name: V2 CI-CD

on:
  push:
    branches: ["*"]
    # branches:
    #   - master
    #   - development
    #   - 'release/**'
  pull_request:
    branches: [main, master]


jobs:
  test:
    name: Tests and Linting
    runs-on: ubuntu-latest
    environment: 
      name: Staging
      url: "https://github.com"
    strategy:
      matrix:
        ruby-version: ['2.6']
    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTRGES_PASSWORD: postgres
        ports: ["5432:5432"]
          # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: deploy
      if: github.event.head_commit.message == 'testing version 3'
      run: echo App deployed to ELB testing
      
    - name: Ruby Setup with test version
      uses: eregon/use-ruby-action@master # defaults to .ruby-version file in repository
      # uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.3
        bundler-cache: true

#     - name: Ruby gem cache
#       uses: actions/cache@v1
#       with:
#         path: vendor/bundle
#         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-gems-

    - name: Runs rails tests
      env:
        DATABASE_URL: postgres://postgres:@localhost:5432/actions_test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        RAILS_ENV: test
      run: |
        bin/rails db:test:prepare
        bundle exec rspec  --require rails

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm install
  
  

    - name: Install PostgreSQL client
      run: |
        sudo apt-get -yqq install libpq-dev
       
    - name: Start Redis
      uses: supercharge/redis-github-action@1.2.0
      with:
        redis-version: ${{ matrix.redis-version }}
  
    
