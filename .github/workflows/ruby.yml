name: Hub V2 CI-CD

on:
  push:
    branches: ["*"]
    # branches:
    #   - master
    #   - development
    #   - 'release/**'
  pull_request:
    branches: [main, master]


jobs:
  test:
    name: Tests and Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.6']
#     services:
#       postgres: postgres:12
#       env:
#         POSTGRES_HOST: localhost
#         POSTGRES_USER: postgres
#         POSTRGES_PASSWORD: postgres
#         ports: ["5432:5432"]
#         # needed because the postgres container does not provide a healthcheck
#         options: >-
#           --health-cmd pg_isready 
#           --health-interval 10s 
#           --health-timeout 5s 
#           --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Ruby Setup with test version
      uses: eregon/use-ruby-action@master # defaults to .ruby-version file in repository
      # uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6.3
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install PostgreSQL client
      run: |
        sudo apt-get -yqq install libpq-dev
        
            # caches gems if build passes
    - name: Setup cache key and directory for gems cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}

    - name: Install gems
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3  
        
    
    - name: Runs rails tests
      env:
        DATABASE_URL: postgres://postgres:@localhost:5432/hub-v2-test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        RAILS_ENV: test
        run: |
            bin/rails db:setup
            bin/rails test
      
     #  test coverage with code-climate action
  coverage:  
    needs: [ test ]
    name: Code climate Test Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: '14'
    - run: npm install -g yarn
    - run: yarn install
    - run: yarn build

    - uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: 12f3e057d5a55fee802d0f7ad079a1433a0d3cdf66a3d738a2e31b60af3b26bc
      with:
        coverageCommand: yarn coverage

      # Deploy to AWS elastic beanstalk
  build:
    name: Deploy to Elastic Beanstalk
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Beanstalk Deployment for V2 App
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: MyApplicationName
          environment_name: MyApplication-Environment
          region: "ap-south-1"
          version_description: ${{ github.SHA }}

      - name: Deployed!
        run: echo App deployed to ELB
